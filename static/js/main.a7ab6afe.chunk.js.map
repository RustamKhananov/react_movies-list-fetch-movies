{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","props","setMovies","useState","foundMovie","setFoundMovie","seachingFieldValue","setSeachingFieldValue","isMovieFound","setIsMovieFound","isAlreadyAtList","setIsAlreadyAtList","onSubmit","event","preventDefault","fetch","then","response","json","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","target","onClick","find","App","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7ab6afe.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState, FormEvent } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { FindMoviePropsType } from '../../interfaces';\n\n\nexport const FindMovie = (props: FindMoviePropsType) => {\n  const { movies, setMovies } = props;\n  const [foundMovie, setFoundMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [seachingFieldValue, setSeachingFieldValue] = useState('');\n  const [isMovieFound, setIsMovieFound] = useState(true);\n  const [isAlreadyAtList, setIsAlreadyAtList] = useState(false);\n  const API_URL = 'https://www.omdbapi.com/';\n\n\n  const getNewMovieFromServer = () => {\n    return fetch(`${API_URL}?apikey=967a07c6&t=${seachingFieldValue}`)\n      .then(response => response.json());\n  };\n\n  const handleSeachingFormSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    getNewMovieFromServer()\n      .then(movie => {\n        if (movie.Response === 'False') {\n          setIsMovieFound(false);\n        }\n\n        const {\n          Title, Plot, Poster, imdbID,\n        } = movie;\n\n        setFoundMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        });\n        setIsAlreadyAtList(false);\n      });\n  };\n\n  const handleSeachingFieldChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSeachingFieldValue(value);\n    setIsMovieFound(true);\n  };\n\n  const handleAddButtonClick = () => {\n    if (!foundMovie.title) {\n      return;\n    }\n\n    if (movies.find((movie: Movie) => movie.imdbId === foundMovie.imdbId)) {\n      setIsAlreadyAtList(true);\n\n      return;\n    }\n\n    setMovies([...movies, foundMovie]);\n    setFoundMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n    setSeachingFieldValue('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSeachingFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${isMovieFound ? '' : 'is-danger'}`}\n              value={seachingFieldValue}\n              onChange={handleSeachingFieldChange}\n            />\n          </div>\n\n          <p\n            className={`help ${isMovieFound ? 'invisible' : ''} is-danger`}\n          >\n            Can&apos;t find a movie with such a title\n          </p>\n          <p\n            className=\"is-danger\"\n          >\n            {isAlreadyAtList\n              ? 'You already have one on your list.'\n              : ''}\n          </p>\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddButtonClick}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {foundMovie.title && <MovieCard {...foundMovie} />}\n\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}